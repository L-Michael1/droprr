// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    products      Product[]
}

model Product {
    id                  String   @id @default(cuid())
    url                 String   @db.Text
    image               String   @db.Text
    name                String   @db.Text
    currentPrice        Float    @default(0)
    originalPrice       Float    @default(0)
    lowestPrice         Float    @default(0)
    highestPrice        Float    @default(0)
    averagePrice        Float    @default(0)
    isOutOfStock        Boolean  @default(false)
    priceHistory        PriceHistory[]
    userId              String
    createdAt           DateTime @default(now())
    user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PriceHistory {
    id                  String  @id @default(cuid())
    productId           String
    price               Float
    product             Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
